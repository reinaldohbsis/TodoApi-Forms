// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Todo.API.Models;

namespace Todo.API.Migrations
{
    [DbContext(typeof(TodoContext))]
    partial class TodoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Todo.API.Models.Pessoa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdTime")
                        .HasColumnType("bigint");

                    b.Property<int>("NivelTime")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<long?>("TimeId")
                        .HasColumnType("bigint");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("IdTime");

                    b.HasIndex("TimeId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("Todo.API.Models.Tarefa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<long>("IdPessoa")
                        .HasColumnType("bigint");

                    b.Property<long>("IdTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<long?>("PessoaId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<long?>("TimesId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa");

                    b.HasIndex("PessoaId");

                    b.HasIndex("TimesId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("Todo.API.Models.Time", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("Todo.API.Models.Pessoa", b =>
                {
                    b.HasOne("Todo.API.Models.Time", "Times")
                        .WithMany()
                        .HasForeignKey("IdTime")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Todo.API.Models.Time", null)
                        .WithMany("Pessoas")
                        .HasForeignKey("TimeId");
                });

            modelBuilder.Entity("Todo.API.Models.Tarefa", b =>
                {
                    b.HasOne("Todo.API.Models.Pessoa", "Pessoas")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Todo.API.Models.Pessoa", null)
                        .WithMany("Tarefas")
                        .HasForeignKey("PessoaId");

                    b.HasOne("Todo.API.Models.Time", "Times")
                        .WithMany("Tarefas")
                        .HasForeignKey("TimesId");
                });
#pragma warning restore 612, 618
        }
    }
}
